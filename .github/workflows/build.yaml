# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/workflows/deploy/**'
      - '.github/workflows/deploy.yaml'
      - 'dev/**'
      - '.vscode/**'
      - 'README.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.vscode/**'
      - 'dev/**'
      - 'README.md'
env:
  VERSION: v0.0.1
  FULL_VERSION: v0.0.1-${{ github.run_number }}
  IMAGE_ID: docker.pkg.github.com/${{ github.repository }}/aspnet-react-container  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  unit-test:
    runs-on: [self-hosted, build]
    steps:
      - uses: actions/checkout@v2
      
      - name: run react unit tests
        run: |
          docker run --volume "./src/ClientApp:/app/ClientApp" -w /app/ClientApp node:12 bash -c "CI=true npm test"
  # This workflow contains a single job called "build"
  build:      
    # The type of runner that the job will run on
    runs-on: [self-hosted, build]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a set of commands using the runners shell
    - name: Docker build
      run: docker build --file ./.github/workflows/build/Dockerfile --tag $IMAGE_ID:$VERSION --tag $IMAGE_ID:$FULL_VERSION $CONTEXT
      env:
        CONTEXT: ./src
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |   
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        echo FULL_VERSION=$FULL_VERSION
        docker push $IMAGE_ID:$FULL_VERSION
        docker push $IMAGE_ID:$VERSION
        
    - name: tag git commit
      run: |
        echo FULL_VERSION=$FULL_VERSION
        git tag $FULL_VERSION
        git push origin $FULL_VERSION
  test:    
    runs-on: [self-hosted, deploy, docker-compose]
    needs: [build]
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    - name: docker-compose up
      run: |        
        echo "Version: $FULL_VERSION"
        
        # setup environment variables for docker-compose
        echo "DOCKER_REPOSITORY=$DOCKER_REPOSITORY" > ./.github/workflows/build/.env
        echo "VERSION=$FULL_VERSION" >> ./.github/workflows/build/.env

        docker-compose -f ./.github/workflows/build/docker-compose.yaml down
        docker-compose -f ./.github/workflows/build/docker-compose.yaml up --detach    
      env:
        DOCKER_REPOSITORY: docker.pkg.github.com/${{ github.repository }}

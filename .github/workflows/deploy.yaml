# This is a basic workflow to help you get started with Actions

name: Deploy on release

on:
  release:
    types: [published]

env:
  VERSION: v0.0.0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-docker-compose:    
    # The type of runner that the job will run on
    runs-on: [self-hosted, deploy, docker-compose]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    - name: docker-compose up
      run: |        
        echo "Version: $VERSION"
        docker-compose -f ./production/docker-compose.yaml up --detach --force-recreate     
      env:
        DOCKER_REPOSITORY: docker.pkg.github.com/${{ github.repository }}
  deploy-k3s:
    runs-on: [self-hosted, deploy, k3s]

    steps:
    - uses: actions/checkout@v2
    - name: Log into registry    
      run: |
        kubectl create secret docker-registry github-registry \
          --docker-server="docker.pkg.github.com" \
          --docker-username=$GITHUB_USERNAME \
          --docker-password=$PAT_TOKEN
      env:
        GITHUB_USERNAME: ${{ github.actor }}
        PAT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: deploy to k3s
      run: kubectl -f ./production/aspnet-react-deployment.yaml apply
